[{"categories":null,"content":" 建设中~ ","date":"2024-06-26","objectID":"/about/:0:0","tags":null,"title":"关于作者","uri":"/about/"},{"categories":["工具"],"content":" 本文收集一些比较有趣的Docker应用，镜像版本更新可能会导致脚本或配置失效，如果无法使用请发邮件给我。 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:0:0","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"一、安装环境 系统 Ubuntu 已开启 BBR加速 BBR加速开启脚本 安装 docker 和 docker-compose最新版本 教程地址 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:1:0","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"二、应用汇总 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:0","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"zerotier 镜像地址 教程地址 services: zerotier: image: zerotier/zerotier container_name: zerotier restart: unless-stopped privileged: true network_mode: host volumes: - ./data:/var/lib/zerotier-one devices: - /dev/net/tun environment: - TZ=Asia/Shanghai cap_add: - NET_ADMIN - SYS_ADMIN command: [\"你的网络ID\"] ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:1","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"watchtower(自动更新容器) 镜像地址 教程地址 services: watchtower: image: containrrr/watchtower container_name: watchtower restart: unless-stopped network_mode: host volumes: - /var/run/docker.sock:/var/run/docker.sock environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:2","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"nginx-web-ui 镜像地址 教程地址 首次登录初始化管理员账号密码 services: nginx-web-ui: image: cym1102/nginxwebui container_name: nginx-web-ui restart: unless-stopped network_mode: host volumes: - ./data:/home/nginxWebUI - ./www:/www environment: - TZ=Asia/Shanghai - BOOT_OPTIONS=--server.port=8080 --spring.database.type=mysql --spring.datasource.url=jdbc:mysql://your-mysql-host:3306/nginx-web-ui --spring.datasource.username=root --spring.datasource.password=your-password ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:3","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"portainer-ce汉化版 镜像地址 教程地址 首次登录初始化管理员账号密码 services: portainer-ce: image: 6053537/portainer-ce container_name: portainer-ce restart: unless-stopped ports: - 9000:9000 volumes: - ./data:/data - /var/run/docker.sock:/var/run/docker.sock environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:4","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"gitea 镜像地址 教程地址 services: gitea: image: gitea/gitea container_name: gitea restart: unless-stopped ports: - 3000:3000 volumes: - ./data:/data environment: - TZ=Asia/Shanghai - USER_UID=1000 - USER_GID=1000 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:5","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"gogs 镜像地址 教程地址 services: gogs: image: gogs/gogs container_name: gogs restart: unless-stopped ports: - 3000:3000 volumes: - ./data:/data environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:6","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"x-ui 镜像地址 默认账号密码: admin/admin services: xui: image: enwaiax/x-ui container_name: x-ui restart: unless-stopped ports: - 54321:54321 - 12345:12345 volumes: - ./data:/etc/x-ui environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:7","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"jenkins 镜像地址 教程地址 services: # 集合 jenkins: image: jenkins/jenkins:lts # 指定服务所使用的镜像 container_name: jenkins # 容器名称 restart: unless-stopped # 重启方式 user: root # 为了避免一些权限问题 在这我使用了root ports: # 对外暴露的端口定义 - 8080:8080 # 访问Jenkins服务端口 - 50000:50000 volumes: # 卷挂载路径 - ./data:/var/jenkins_home # 这是我们一开始创建的目录挂载到容器内的jenkins_home目录 - /usr/bin/docker:/usr/bin/docker # 这是为了我们可以在容器内使用docker命令 - /var/run/docker.sock:/var/run/docker.sock - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose environment: - TZ=Asia/Shanghai - JAVA_OPTS=-server -Xms1024m -Xmx1024m -Xmn512m ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:8","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"minio(单机部署) 镜像地址 旧版教程 新版教程 services: minio: image: minio/minio:RELEASE.2021-06-17T00-10-46Z container_name: minio restart: unless-stopped ports: - 9000:9000 volumes: - ./config:/root/.minio - ./data:/data environment: - TZ=Asia/Shanghai - MINIO_ROOT_USER=minio - MINIO_ROOT_PASSWORD=your-minio-password command: server /data ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:9","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"mysql 镜像地址 教程地址 内存优化 services: mysql: image: mysql container_name: mysql restart: unless-stopped ports: - 3306:3306 volumes: - ./config/my.cnf:/etc/mysql/my.cnf - ./data:/var/lib/mysql - ./log:/var/log/mysql environment: - TZ=Asia/Shanghai # 初始化mysql的root密码 - MYSQL_ROOT_PASSWORD=your-mysql-password my.cnf文件，请自行按需修改。 [mysqld] user=mysql max_connections=1000 mysql-native-password=ON character-set-server=utf8mb4 collation-server=utf8mb4_general_ci default-storage-engine=INNODB default-time_zone='+8:00' sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION [client] default-character-set=utf8mb4 [mysql] default-character-set=utf8mb4 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:10","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"postgres 镜像地址 教程地址 services: postgres: image: postgres container_name: postgres restart: unless-stopped ports: - 5432:5432 volumes: - ./data:/var/lib/postgresql/data environment: - TZ=Asia/Shanghai - POSTGRES_USER=root - POSTGRES_PASSWORD=your-postgres-password - POSTGRES_DB=postgres ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:11","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"redis 镜像地址 教程地址 services: redis: image: redis container_name: redis restart: unless-stopped ports: - 6379:6379 volumes: - ./config/redis.conf:/etc/redis/redis.conf - ./data:/data environment: - TZ=Asia/Shanghai command: redis-server /etc/redis/redis.conf ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:12","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"httpd 镜像地址 services: httpd1: image: httpd container_name: httpd1 restart: unless-stopped ports: - 8080:80 volumes: - ./data/web1:/usr/local/apache2/htdocs/ environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:13","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"frps 镜像地址 参考配置 services: frps: image: snowdreamtech/frps container_name: frps restart: unless-stopped network_mode: host volumes: - ./config/frps.toml:/etc/frp/frps.toml environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:14","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"frpc 镜像地址 参考配置 services: frpc: image: snowdreamtech/frpc container_name: frpc restart: unless-stopped network_mode: host volumes: - ./config/frpc.toml:/etc/frp/frpc.toml environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:15","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"alist(预装aria2) 镜像地址 教程地址 获取初始账号密码: 在宿主机执行docker exec -it 容器ID bash进入容器, 执行./alist admin set your-password手动设置密码 services: alist: image: xhofe/alist-aria2 container_name: alist restart: unless-stopped ports: - 5244:5244 - 6800:6800 volumes: - ./data:/opt/alist/data - ./mydata:/mydata environment: - TZ=Asia/Shanghai - PUID=0 - PGID=0 - UMASK=022 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:16","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"rocketmq(单机部署) 镜像地址 教程地址 配置文件解释 services: rocketmq-namesrv: image: rocketmqinc/rocketmq container_name: rocketmq-namesrv restart: unless-stopped ports: - 9876:9876 volumes: - ./data/namesrv/logs:/home/rocketmq/logs - ./data/namesrv/store:/home/rocketmq/store environment: - TZ=Asia/Shanghai - JAVA_OPT_EXT=-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m command: [ \"sh\",\"mqnamesrv\" ] rocketmq-broker: image: rocketmqinc/rocketmq container_name: rocketmq-broker restart: unless-stopped ports: - 10909:10909 - 10911:10911 volumes: - ./config/broker.conf:/etc/rocketmq/broker.conf - ./data/broker/logs:/home/rocketmq/logs - ./data/broker/store:/home/rocketmq/store environment: - TZ=Asia/Shanghai - JAVA_OPT_EXT=-Duser.home=/home/broker -Xms512M -Xmx512M -Xmn128m command: [ \"sh\",\"mqbroker\",\"-c\",\"/etc/rocketmq/broker.conf\",\"-n\",\"rocketmq-namesrv:9876\",\"autoCreateTopicEnable=true\" ] depends_on: - rocketmq-namesrv rocketmq-console: image: styletang/rocketmq-console-ng container_name: rocketmq-console restart: unless-stopped ports: - 8080:8080 volumes: - ./data/console:/tmp environment: - TZ=Asia/Shanghai - JAVA_OPTS=-Drocketmq.namesrv.addr=rocketmq-namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false -Xms512M -Xmx512M -Xmn128m depends_on: - rocketmq-namesrv ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:17","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"verdaccio(npm私服) 镜像地址 教程地址 services: verdaccio: image: verdaccio/verdaccio container_name: verdaccio restart: unless-stopped ports: - 3005:3005 volumes: - ./data/conf:/verdaccio/conf - ./data/plugins:/verdaccio/plugins - ./data/storage:/verdaccio/storage environment: - TZ=Asia/Shanghai - VERDACCIO_PORT=3005 - VERDACCIO_USER_NAME=root ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:18","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"nexus(maven私服) 镜像地址 教程地址 services: nexus: image: sonatype/nexus3 container_name: nexus restart: unless-stopped ports: - 8081:8081 volumes: - ./data:/nexus-data environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:19","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"nacos 镜像地址 官方文档 数据库初始化 教程地址 默认的账号和密码都是 nacos， services: nacos: image: nacos/nacos-server:v2.2.3 container_name: nacos restart: unless-stopped ports: - 8848:8848 - 9848:9848 - 9849:9849 volumes: - ./logs/:/home/nacos/logs environment: - TZ=Asia/Shanghai - MODE=standalone - SPRING_DATASOURCE_PLATFORM=mysql - MYSQL_SERVICE_HOST=your-mysql-host - MYSQL_SERVICE_PORT=3306 - MYSQL_SERVICE_USER=root - MYSQL_SERVICE_PASSWORD=your-mysql-password - MYSQL_SERVICE_DB_NAME=nacos - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8\u0026connectTimeout=1000\u0026socketTimeout=3000\u0026autoReconnect=true\u0026useUnicode=true\u0026useSSL=false\u0026serverTimezone=UTC - JVM_XMS=512m - JVM_XMX=512m - JVM_XMN=256m - JVM_MS=512m - JVM_MMS=512m # 启用账号密码验证 - NACOS_AUTH_ENABLE=true # 随便使用一个32个字符组成的字符串，生成 base64 字符串，填写到这里即可 - NACOS_AUTH_TOKEN=VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg= # 随便填写 - NACOS_AUTH_IDENTITY_KEY=JobsKey # 随便填写 - NACOS_AUTH_IDENTITY_VALUE=JobsValue ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:20","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"vsftpd(ftp) 镜像地址 教程地址 services: vsftpd: image: fauria/vsftpd container_name: vsftpd restart: unless-stopped ports: - 20:20 - 21:21 - 21100-21200:21100-21200 volumes: - ./data:/home/vsftpd - ./logs/vsftpd.log:/var/log/vsftpd.log environment: - TZ=Asia/Shanghai - FTP_USER=root - FTP_PASS=your-password - PASV_MIN_PORT=21100 - PASV_MAX_PORT=21200 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:21","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"code-server(网页版vscode) 镜像地址 github地址 如果启动失败，日志显示没有权限创建文件或目录，可以试试给./data目录提升读写权限。 services: code-server: image: codercom/code-server container_name: code-server restart: unless-stopped ports: - 8080:8080 volumes: - ./data:/home/coder environment: - TZ=Asia/Shanghai - PUID=0 - PGID=0 - PASSWORD=your-password - SUDO_PASSWORD=your-password ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:22","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"samba(samba服务器) 镜像地址 教程地址 services: samba: image: dperson/samba container_name: samba restart: unless-stopped ports: - 139:139 - 445:445 volumes: - ./data:/mount environment: - TZ=Asia/Shanghai command: '-u \"username1;password1\" -u \"username2;password2\" -s \"share;/mount/;yes;yes;yes;all;none\" -s \"public;/mount/;yes;no;no;all;none\"' ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:23","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"lychee(瀑布流相册) 镜像地址 github地址 services: lychee: image: lycheeorg/lychee container_name: lychee restart: unless-stopped ports: - 8080:80 volumes: - ./config:/conf - ./sym:/sym - ./data:/uploads environment: - TZ=Asia/Shanghai - PUID=1000 - PGID=1000 - DB_CONNECTION=sqlite ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:24","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"lsky-pro(兰空图床) 镜像地址 github地址 services: lsky-pro: image: halcyonazure/lsky-pro-docker container_name: lsky-pro restart: unless-stopped ports: - 8089:8089 volumes: - ./data:/var/www/html environment: - TZ=Asia/Shanghai - WEB_PORT=8089 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:25","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"easyimage(简单图床) 镜像地址 github地址 services: easyimage: image: ddsderek/easyimage:latest container_name: easyimage restart: unless-stopped ports: - 8080:80 volumes: - ./config:/app/web/config - ./data:/app/web/i environment: - TZ=Asia/Shanghai - PUID=1000 - PGID=1000 - DEBUG=false ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:26","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"voce-chat(在线聊天室) 镜像地址 官方文档 services: voce-chat: image: privoce/vocechat-server container_name: voce-chat restart: unless-stopped ports: - 3000:3000 volumes: - ./data:/home/vocechat-server/data environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:27","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"uptime-kuma(开源监控工具) 镜像地址 教程地址 services: uptime-kuma: image: louislam/uptime-kuma container_name: uptime-kuma restart: unless-stopped ports: - 3001:3001 volumes: - ./data:/app/data environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:28","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"docker-registry(docker仓库) 镜像地址 教程地址 services: docker-registry: image: registry container_name: docker-registry restart: unless-stopped ports: - 5000:5000 volumes: - ./data:/var/lib/registry environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:29","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"rustdesk-server(RustDesk远程桌面服务端) 镜像地址 github地址 services: rustdesk-server: image: rustdesk/rustdesk-server-s6 container_name: rustdesk-server restart: unless-stopped ports: - 21115:21115 - 21116:21116 - 21116:21116/udp - 21117:21117 - 21118:21118 - 21119:21119 volumes: - ./data:/data environment: - TZ=Asia/Shanghai - RELAY=rustdesk.example.com:21117 - ENCRYPTED_ONLY=1 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:30","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"dosgame(DOS游戏) 镜像地址 github地址 services: dosgame: image: oldiy/dosgame-web-docker container_name: dosgame restart: unless-stopped ports: - 262:262 environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:31","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"kuboard(k8s可视化面板) 镜像地址 教程地址 services: kuboard: image: eipwork/kuboard:v3 container_name: kuboard restart: unless-stopped ports: - 8090:80 - 10081:10081 volumes: - ./data:/data environment: - TZ=Asia/Shanghai - KUBOARD_ENDPOINT=http://ip:8090 - KUBOARD_AGENT_SERVER_TCP_PORT=10081 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:32","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"kubepi(k8s可视化面板) 镜像地址 官方文档 services: kubepi: image: 1panel/kubepi container_name: kubepi restart: unless-stopped privileged: true ports: - 8080:80 environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:33","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"rainbond(云原生平台) 教程地址 services: rainbond: image: registry.cn-hangzhou.aliyuncs.com/goodrain/rainbond:v5.15.0-release-allinone container_name: rainbond restart: unless-stopped network_mode: host volumes: - ./.ssh:/root/.ssh - ./data:/app/data environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:34","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"hnet-web(在线网页代理) 镜像地址 教程地址 services: hnet-web: image: stilleshan/hideipnetwork-web container_name: hnet-web restart: unless-stopped ports: - 56559:56559 environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:35","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"memos(备忘录) 镜像地址 github地址 services: memos: image: neosmemo/memos:latest container_name: memos restart: unless-stopped ports: - 5230:5230 volumes: - ./data:/var/opt/memos environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:36","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"neko(neko远程浏览器) 镜像地址 教程地址 services: neko: image: m1k1o/neko:firefox container_name: neko restart: \"unless-stopped\" shm_size: \"2gb\" ports: - 8080:8080 - 52000-52100:52000-52100/udp cap_add: - SYS_ADMIN environment: - TZ=Asia/Shanghai - NEKO_SCREEN='1920x1080@60' - NEKO_PASSWORD=neko - NEKO_PASSWORD_ADMIN=admin - NEKO_EPR=52000-52100 - NEKO_NAT1TO1=127.0.0.1 - NEKO_FILE_TRANSFER_ENABLED=true ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:37","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"lobe-chat(开源的高性能聊天机器人框架) 镜像地址 github地址 环境变量 services: lobe-chat: image: lobehub/lobe-chat container_name: lobe-chat restart: unless-stopped ports: - 3210:3210 environment: - TZ=Asia/Shanghai - ACCESS_CODE=your-password - OLLAMA_PROXY_URL=your-ollama-url - OPENAI_API_KEY=your-openai-key - OPENAI_PROXY_URL=your-openai-url - ANTHROPIC_API_KEY=your-anthropic-key - ANTHROPIC_PROXY_URL=your-anthropic-url ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:38","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"chatgpt-next-web(跨平台ChatGPT应用) 镜像地址 教程地址 services: chatgpt: image: yidadaa/chatgpt-next-web container_name: chatgpt restart: unless-stopped ports: - 3000:3000 environment: - TZ=Asia/Shanghai - OPENAI_API_KEY=your-key - CODE=your-password - BASE_URL=https://your-openai-api-url/v1 - OLLAMA_PROXY_URL=https://your-ollama-api-url/v1 ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:39","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"pairdrop(在线文件传输) 镜像地址 github地址 services: pair-drop: image: lscr.io/linuxserver/pairdrop container_name: pair-drop restart: unless-stopped ports: - 3000:3000 environment: - TZ=Asia/Shanghai - PUID=1000 - PGID=1000 - RATE_LIMIT=false - WS_FALLBACK=false ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:40","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"it-tools(开发者工具箱) 镜像地址 github地址 services: it-tools: image: qingfeng2336/it-tools container_name: it-tools restart: unless-stopped ports: - 8080:80 environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:41","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"filecodebox(文件快递柜) 镜像地址 github地址 services: file-code-box: image: lanol/filecodebox:beta container_name: file-code-box restart: unless-stopped ports: - 12345:12345 volumes: - ./data:/app/data environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:42","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"briefing(WebRTC视频通话) 镜像地址 github地址 services: video-chat: image: holtwick/briefing container_name: video-chat restart: unless-stopped ports: - 8080:8080 environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:43","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"emby(emby多媒体服务器-特别版) 镜像地址 services: emby: image: lovechen/embyserver container_name: emby restart: unless-stopped ports: - 8096:8096 - 8920:8920 - 1900:1900/udp - 7359:7359/udp volumes: - ./data:/config - ./your-media-path:/media environment: - TZ=Asia/Shanghai - UID=0 - GID=0 - GIDLIST=0 - NVIDIA_VISIBLE_DEVICES=all devices: - /dev/dri:/dev/dri ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:44","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"plex(plex多媒体服务器) 镜像地址 获取claim services: plex: image: lscr.io/linuxserver/plex container_name: plex restart: unless-stopped network_mode: host volumes: - ./data:/config - ./your-media-path:/media environment: - TZ=Asia/Shanghai - PUID=1000 - PGID=1000 - VERSION=docker - PLEX_CLAIM=your-claim ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:45","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"stash(stash多媒体管理) 镜像地址 github地址 services: stash: image: stashapp/stash container_name: stash restart: unless-stopped ports: - \"9999:9999\" volumes: - ./data/config:/root/.stash - ./data/generated:/generated - ./data/metadata:/metadata - ./data/cache:/cache - ./your-media-path:/media environment: - TZ=Asia/Shanghai - STASH_GENERATED=/generated/ - STASH_METADATA=/metadata/ - STASH_CACHE=/cache/ - STASH_STASH=/media/ - STASH_PORT=9999 logging: driver: \"json-file\" options: max-file: \"10\" max-size: \"2m\" ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:46","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"transmission(bt下载工具) 镜像地址 transmission-web-ui中文增强版 services: transmission: image: lscr.io/linuxserver/transmission container_name: transmission restart: unless-stopped ports: - 9091:9091 - 51413:51413 - 51413:51413/udp volumes: - ./data:/config - ./downloads:/downloads environment: - TZ=Asia/Shanghai - PUID=1000 - PGID=1000 - TRANSMISSION_WEB_HOME=/config/transmission-web-ui - USER=your-username - PASS=your-password ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:47","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"showdoc(在线文档) 镜像地址 帮助文档 services: showdoc: image: star7th/showdoc container_name: showdoc restart: unless-stopped privileged: true user: root ports: - 8080:80 volumes: - ./data:/var/www/html environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:48","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"odoo(开源的商业应用程序) 镜像地址 教程地址 安装自定义模块需要配置odoo.conf，具体看教程。 services: odoo: image: odoo container_name: odoo restart: unless-stopped ports: - 8069:8069 volumes: - ./config:/etc/odoo - ./data:/var/lib/odoo - ./addons:/mnt/extra-addons environment: - TZ=Asia/Shanghai - HOST=your-postgres-host - USER=your-postgres-user - PASSWORD=your-postgres-password ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:49","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"onlyoffice-server(onlyoffice在线文档服务端) 镜像地址 如果要使用jwt，就去除- JWT_ENABLED=false services: onlyoffice-server: image: onlyoffice/documentserver container_name: onlyoffice-server restart: unless-stopped ports: - 8080:80 environment: - TZ=Asia/Shanghai - JWT_ENABLED=false ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:50","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"nextcloud(自建网盘) 镜像地址 services: nextcloud: image: nextcloud container_name: nextcloud restart: unless-stopped ports: - 8080:80 volumes: - ./data:/var/www/html environment: - TZ=Asia/Shanghai - MYSQL_HOST=your-mysql-host - MYSQL_USER=your-mysql-user - MYSQL_PASSWORD=your-mysql-password - MYSQL_DATABASE=nextcloud ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:51","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["工具"],"content":"kodbox(可道云) 镜像地址 免费版有10个用户的上限 services: kodbox: image: kodcloud/kodbox container_name: kodbox restart: unless-stopped ports: - 8080:80 volumes: - ./data:/var/www/html environment: - TZ=Asia/Shanghai ","date":"2023-02-01","objectID":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/:2:52","tags":["Docker"],"title":"好用的Docker应用汇总","uri":"/2023/02/%E5%A5%BD%E7%94%A8%E7%9A%84docker%E5%BA%94%E7%94%A8%E6%B1%87%E6%80%BB/"},{"categories":["教程"],"content":"backdrop-filter与filter的区别 filter：模糊内容 backdrop-filter:透过该层的底部元素模糊化 这两个属性的语法是一样的 下面是使用案例 backdrop-filter:saturate(150%) contrast(50%) blur(8px); background-color:rgba(0,0,0,.3); saturate(150%)意为使…饱和，类似ps饱和度效果，小于100%变暗，大于100%变亮 contrast(50%)意为对比，类似ps对比度，100%为原图，0%为全灰色图像 ","date":"2022-12-27","objectID":"/2022/12/css3%E6%AF%9B%E7%8E%BB%E7%92%83%E6%95%88%E6%9E%9C/:1:0","tags":["CSS3","毛玻璃"],"title":"CSS3毛玻璃效果","uri":"/2022/12/css3%E6%AF%9B%E7%8E%BB%E7%92%83%E6%95%88%E6%9E%9C/"},{"categories":["工具"],"content":"一、api整合 ","date":"2022-12-26","objectID":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/:1:0","tags":["图片api"],"title":"随机图片api","uri":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/"},{"categories":["工具"],"content":"樱道 网站：https://img.r10086.com/ 调用地址： 二次元动漫(1-18)：https://api.r10086.com/img-api.php?type=动漫综合1 东京食尸鬼(横竖屏)：https://api.r10086.com/img-api.php?type=东京食尸鬼横屏系列1 Fate(横竖屏)：https://api.r10086.com/img-api.php?type=Fate横屏系列1 为美好世界献上祝福(横竖屏)：https://api.r10086.com/img-api.php?type=为美好世界献上祝福横屏系列1 某科学的超电磁炮(横竖屏)：https://api.r10086.com/img-api.php?type=某科学的超电磁炮横屏系列1 原神(横竖屏)：https://api.r10086.com/img-api.php?type=原神横屏系列1 我的世界：https://api.r10086.com/img-api.php?type=我的世界系列1 神奇宝贝(横竖屏)：https://api.r10086.com/img-api.php?type=神奇宝贝横屏系列1 龙珠(横竖屏)：https://api.r10086.com/img-api.php?type=龙珠横屏系列1 罪恶王冠(横竖屏)：https://api.r10086.com/img-api.php?type=罪恶王冠横屏系列1 鬼灭之刃(横竖屏)：https://api.r10086.com/img-api.php?type=鬼灭之刃横屏系列1 火影忍者(横竖屏)：https://api.r10086.com/img-api.php?type=火影忍者横屏系列1 海贼王(横竖屏)：https://api.r10086.com/img-api.php?type=海贼王横屏系列1 进击的巨人(横竖屏)：https://api.r10086.com/img-api.php?type=进击的巨人横屏系列1 从零开始的异世界生活(横竖屏)：https://api.r10086.com/img-api.php?type=从零开始的异世界生活横屏系列1 刀剑神域(横竖屏)：https://api.r10086.com/img-api.php?type=刀剑神域横屏系列1 钢之炼金术师(横竖屏)：https://api.r10086.com/img-api.php?type=钢之炼金术师横屏系列1 妖精的尾巴(横竖屏)：https://api.r10086.com/img-api.php?type=妖精的尾巴横屏系列1 缘之空(横竖屏)：https://api.r10086.com/img-api.php?type=缘之空横屏系列1 东方project：https://api.r10086.com/img-api.php?type=东方project1 猫娘：https://api.r10086.com/img-api.php?type=猫娘1 风景(1-10)：https://api.r10086.com/img-api.php?type=风景系列1 物语(1-2)：https://api.r10086.com/img-api.php?type=物语系列1 少女前线：https://api.r10086.com/img-api.php?type=少女前线1 明日方舟(1-2)：https://api.r10086.com/img-api.php?type=明日方舟1 重装战姬：https://api.r10086.com/img-api.php?type=重装战姬1 P站(1-4)：https://api.r10086.com/img-api.php?type=P站系列1 CG(1-5)：https://api.r10086.com/img-api.php?type=CG系列1 守望先锋：https://api.r10086.com/img-api.php?type=守望先锋 王者荣耀：https://api.r10086.com/img-api.php?type=王者荣耀 少女写真(1-6)：https://api.r10086.com/img-api.php?type=少女写真1 死库水萝莉：https://api.r10086.com/img-api.php?type=死库水萝莉 萝莉：https://api.r10086.com/img-api.php?type=萝莉 极品美女图片：https://api.r10086.com/img-api.php?type=极品美女图片 日本COS中国COS：https://api.r10086.com/img-api.php?type=日本COS中国COS 橘里橘气(横竖屏)：https://api.r10086.com/img-api.php?type=橘里橘气横屏系列1 ","date":"2022-12-26","objectID":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/:1:1","tags":["图片api"],"title":"随机图片api","uri":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/"},{"categories":["工具"],"content":"保罗 网站：https://api.paugram.com/help/wallpaper 调用地址：https://api.paugram.com/wallpaper/ ","date":"2022-12-26","objectID":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/:1:2","tags":["图片api"],"title":"随机图片api","uri":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/"},{"categories":["工具"],"content":"东方Project 调用地址：https://img.paulzzh.com/touhou/random ","date":"2022-12-26","objectID":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/:1:3","tags":["图片api"],"title":"随机图片api","uri":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/"},{"categories":["工具"],"content":"likepoems随机图 网站：https://api.likepoems.com/ 调用地址： 二次元PC壁纸：https://api.likepoems.com/img/pc 二次元PE壁纸：https://api.likepoems.com/img/pe mc酱壁纸：https://api.likepoems.com/img/mc pixiv壁纸：https://api.likepoems.com/img/pixiv nature壁纸：https://api.likepoems.com/img/nature 必应壁纸：https://api.likepoems.com/img/bing ","date":"2022-12-26","objectID":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/:1:4","tags":["图片api"],"title":"随机图片api","uri":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/"},{"categories":["工具"],"content":"二、怎么自制随机图 准备图片—\u003e书写路径—\u003e书写php文件 在img文件夹里新建img.txt，文件中直接写图片的URL地址，如： https://static.likepoems.com/2020/10/06/385ea1c4c8b4fbac57f5a0aa61f033761.jpg https://static.likepoems.com/2021/06/12/20210126104630786.png 新建index.php文件。文件内容如下： \u003c?php //存放api随机图链接的文件名img.txt $filename = \"img.txt\"; if(!file_exists($filename)){ die('文件不存在'); } //从文本获取链接 $pics = []; $fs = fopen($filename, \"r\"); while(!feof($fs)){ $line=trim(fgets($fs)); if($line!=''){ array_push($pics, $line); } } //从数组随机获取链接 $pic = $pics[array_rand($pics)]; //返回指定格式 $type=$_GET['type']; switch($type){ //JSON返回 case 'json': header('Content-type:text/json'); die(json_encode(['pic'=\u003e$pic])); default: die(header(\"Location: $pic\")); } ?\u003e 然后放在服务器里面的api文件夹里，绑定域名，记得开启php环境 访问路径：你的域名/api/img ","date":"2022-12-26","objectID":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/:2:0","tags":["图片api"],"title":"随机图片api","uri":"/2022/12/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/"},{"categories":["教程"],"content":"一、Nginx介绍 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:1:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"1.1 引言 为什么要学习Nginx 问题1：客户端到底要将请求发送给哪台服务器 问题2：如果所有客户端的请求都发送给了服务器 问题3：客户端发送的请求可能是申请动态资源的，也有申请静态资源的 服务器搭建集群后 在搭建集群后，使用Nginx做反向代理 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:1:1","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"1.2 Nginx介绍 Nginx是由俄罗斯人研发的，应对Rambler的网站并发，并且2004年发布的第一个版本 Nginx的特点 稳定性极强，7*24小时不间断运行(就是一直运行) Nginx提供了非常丰富的配置实例 占用内存小，并发能力强（随便配置一下就是5w+，而tomcat的默认线程池是150） ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:1:2","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"二、Nginx的安装 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:2:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"2.1 安装Nginx 使用docker-compose安装 #在/opt目录下创建docker_nginx目录 cd /opt mkdir docker_nginx #创建docker-compose.yml文件并编写下面的内容,保存退出 vim docker-compose.yml version: '3.1' services: nginx: restart: always image: daocloud.io/library/nginx:latest container_name: nginx ports: - 80:80 执行docker-compose up -d ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:2:1","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"2.2 Nginx的配置文件 Nginx的核心配置文件 # 查看当前nginx的配置需要进入docker容器中 docker exec -it 容器id bash # 进入容器后 cd /etc/nginx/ cat nginx.conf nginx.conf文件内容如下 user nginx; worker_processes 1; error_log /var/log/nginx/error.log warn; pid /var/run/nginx.pid; # 以上同称为全局块 # worker_processes的数值越大，Nginx的并发能力就越强 # error_log代表Nginx错误日志存放的位置 # pid是Nginx运行的一个标识 events { worker_connections 1024; } # events块 # worker_connections的数值越大，Nginx的并发能力就越强 http { include /etc/nginx/mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; #tcp_nopush on; keepalive_timeout 65; #gzip on; include /etc/nginx/conf.d/*.conf; } # http块 # include 代表引入一个外部文件 # include /etc/nginx/mime.types; mime.types中存放着大量媒体类型 # include /etc/nginx/conf.d/*.conf; 引入了conf.d下以.conf为结尾的配置文件 conf.d目录下只有一个default.conf文件，内容如下 server { listen 80; listen [::]:80; server_name localhost; #charset koi8-r; #access_log /var/log/nginx/host.access.log main; location / { root /usr/share/nginx/html; index index.html index.htm; } # location块 # root:将接受到的请求根据/usr/share/nginx/html去查找静态资源 # index:默认去上述的路径中找到index.html或index.htm } # server块 # listen代表Nginx监听的端口号 # server_name代表Nginx接受请求的IP ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:2:2","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"2.3 修改docker-compose文件 # 退出容器 exit # 关闭容器 docker-compose down # 修改docker-compose.yml文件如下 version: '3.1' services: nginx: restart: always image: daocloud.io/library/nginx:latest container_name: nginx ports: - 80:80 volumes: - /opt/docker_nginx/conf.d/:/etc/nginx/conf.d # 重新构建容器 docker-compose bulid # 重新启动容器 docker-compose up -d 这时我们再次访问80端口是访问不到的，因为我们映射了数据卷之后还没有编写server块中的内容 接下来我们在/opt/docker_nginx/conf.d下新建default.conf，并插入如下内容 server { listen 80; listen [::]:80; server_name localhost; location / { root /usr/share/nginx/html; index index.html index.htm; } } # 重启nginx docker-compose restart ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:2:3","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"三、Nginx的反向代理 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:3:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"3.1 正向代理和反向代理介绍 正向代理： 正向代理服务是由客户端设立的 客户端了解代理服务器和目标服务器都是谁 帮助咱们实现突破访问权限，提高访问的速度，对目标服务器隐藏客户端的ip地址 反向代理： 反向代理服务器是配置在服务端的 客户端不知道访问的到底是哪一台服务器 达到负载均衡，并且可以隐藏服务器真正的ip地址 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:3:1","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"3.2 基于Nginx实现反向代理 准备一个目标服务器 启动tomcat服务器 编写nginx的配置文件(/opt/docker_nginx/conf.d/default.conf)，通过Nginx访问到tomcat服务器 准备Tomcat服务器 docker run -d -p 8080:8080 --name tomcat daocloud.io/library/tomcat:8.5.15-jre8 #或者已经下载了tomcat镜像 docker run -d -p 8080:8080 --name tomcat 镜像的标识 #添加数据卷 docker run -it -v /宿主机绝对目录:/容器内目录 镜像名 default.conf文件内容如下 server { listen 80; listen [::]:80; server_name localhost; # 基于反向代理访问Tomcat服务器 location / { proxy_pass http://IP:8080/; } } # 重启nginx docker-compose restart 这时我们访问80端口可以看到8080端口tomcat的默认首页 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:3:2","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"3.3 关于Nginx的location路径映射 优先级关系： (location = ) \u003e (location /xxx/yyy/zzz) \u003e (location ^~) \u003e (location ~,~*) \u003e (location /起始路径) \u003e (location /) # 1. = 匹配 location / { # 精准匹配，主机名后面不能带能和字符串 # 例如www.baidu.com不能是www.baidu.com/id=xxx } # 2. 通用匹配 location /xxx { # 匹配所有以/xxx开头的路径 # 例如127.0.0.1:8080/xxx xxx可以为空，为空则和=匹配一样 } # 3. 正则匹配 location ~ /xxx { # 匹配所有以/xxx开头的路径 } # 4. 匹配开头路径 location ^~ /xxx/xx { # 匹配所有以/xxx/xx开头的路径 } # 5. 匹配结尾路径 location ~* \\.(gif/jpg/png)$ { # 匹配以.gif、.jpg或者.png结尾的路径 } 修改/opt/docker_nginx/conf.d/default.conf如下 server { listen 80; listen [::]:80; server_name localhost; location /index { proxy_pass http://IP:8081/; # A首页 } location ^~ /mall/ { proxy_pass http://IP:8080/; # B首页 } location / { proxy_pass http://IP:8080/; # C首页 } } docker-compose restart ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:3:3","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"四、Nginx负载均衡 Nginx为我们默认提供了三种负载均衡的策略： 轮询： 将客户端发起的请求，平均分配给每一台服务器 权重： 会将客户端的请求，根据服务器的权重值不同，分配不同的数量 ip_hash: 基于发起请求的客户端的ip地址不同，他始终会将请求发送到指定的服务器上 就是说如果这个客户端的请求的ip地址不变，那么处理请求的服务器将一直是同一个 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:4:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"4.1 轮询 想实现轮询负载均衡机制只需要修改配置文件如下 upstream my_server{ server IP:8080; server IP:8081; } server { listen 80; listen [::]:80; server_name localhost; location / { proxy_pass http://my_server/; #Tomcat首页 } } ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:4:1","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"4.2 权重 实现权重的方式：在配置文件中upstream块中加上weight upstream my_server{ server IP:8080 weight=10; server IP:8081 weight=2; } server { listen 80; listen [::]:80; server_name localhost; location / { proxy_pass http://my_server/; #Tomcat首页 } } ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:4:2","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"4.3 ip_hash 实现ip_hash方式：在配置文件upstream块中加上ip_hash upstream my_server{ ip_hash; server IP:8080 weight=10; server IP:8081 weight=2; } server { listen 80; listen [::]:80; server_name localhost; location / { proxy_pass http://my_server/; #Tomcat首页 } } ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:4:3","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"五、Nginx动静分离 Nginx的并发能力公式： worker_processes * worker_connections / (4 or 2)，动态资源需要/4，静态资源需要/2 Nginx通过动静分离来提升Nginx的并发能力，更快的给用户响应 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:5:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"5.1 动态资源代理 # 配置如下 location / { proxy_pass 路径; } ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:5:1","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"5.2 静态资源代理 先修改docker-compose文件 version: '3.1' services: nginx: restart: always image: daocloud.io/library/nginx:latest container_name: nginx ports: - 80:80 volumes: - /opt/docker_nginx/conf.d/:/etc/nginx/conf.d - /opt/docker_nginx/html/:/usr/share/nginx/html # 在/opt/docker_nginx/html下新建一个index.html # 在index.html里面随便写点东西展示 # 修改nginx的配置文件 location / { root /usr/share/nginx/html; index index.html; } # 配置如下 location / { root 静态资源路径; index 默认访问路径下的什么资源; autoindex on; # 代表展示静态资源的全部内容，以列表的形式展开 } # 重启nginx docker-compose restart ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:5:2","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"六、Nginx集群 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:6:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"6.1 引言 目的：避免单点nginx的宕机，导致整个程序的崩溃 准备多台nginx 准备keepalived，监听nginx的健康情况 准备haproxy，提供一个虚拟的路径，统一的去接收用户的请求 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:6:1","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"6.2 搭建 # 先准备好以下文件放入/opt/docker_nginx_cluster目录中 # 然后启动容器 注意确保80、8081和8082端口未被占用(或者修改docker-compose.yml中的端口) docker-compose up -d # 然后我们访问8081端口可以看到master，访问8082端口可以看到slave # 因为我们设置了81端口的master优先级未200比82端口的slave优先级100高，所以我们访问80端口看到的是master # 现在我们模仿8081端口的nginx宕机了 # docker stop 8081端口nginx容器的ID # 这时我们再去访问80端口看到的就是slave了 Dockerfile FROM nginx:1.13.5-alpine RUN apk update \u0026\u0026 apk upgrade RUN apk add --no-cache bash curl ipvsadm iproute2 openrc keepalived COPY entrypoint.sh /entrypoint.sh RUN chmod +x /entrypoint.sh CMD [\"/entrypoint.sh\"] entrypoint.sh #!/bin/sh #/usr/sbin/keepalvined -n -l -D -f /etc/keepalived/keepalived.conf --dont-fork --log-console \u0026 /usr/sbin/keepalvined -D -f /etc/keepalived/keepalived.conf nginx -g \"daemon off;\" docker-compose.yml version: \"3.1\" services: nginx_master: build: context: ./ dockerfile: ./Dockerfile ports: -8081:80 volumes: - ./index-master.html:/usr/share/nnginx/html/index.html - ./favicon.ico:/usr/share/nnginx/html/favicon.ico - ./keepalived-master.conf:/etv/keepalived/keepalived.conf networks: static-network: ipv4_address:172.20.128.2 cap_add: - NET_ADMIN nginx_slave: build: context: ./ dockerfile: ./Dockerfile ports: -8082:80 volumes: - ./index-slave.html:/usr/share/nnginx/html/index.html - ./favicon.ico:/usr/share/nnginx/html/favicon.ico - ./keepalived-slave.conf:/etv/keepalived/keepalived.conf networks: static-network: ipv4_address:172.20.128.3 cap_add: - NET_ADMIN proxy: image: haproxy:1.7-apline ports: - 80:6301 volumes: - ./happroxy.cfg:/usr/local/etc/haproxy/haproxy.cfg networks: - static-network networks: static-network: ipam: congig: - subnet: 172.20.0.0/16 keepalived-master.conf vrrp_script chk_nginx { script \"pidof nginx\" interval 2 } vrrp_instance VI_1 { state MASTER interface etch0 # 容器内部的网卡名称 virtual_router_id 33 priority 200 # 优先级 advert_int 1 autheentication { auth_type PASS auth_pass letmein } virtual_ipaddress { 172.20.128.50 # 虚拟路径 } track_script { chk_nginx } } keepalived-slave.conf vrrp_script chk_nginx { script \"pidof nginx\" interval 2 } vrrp_instance VI_1 { state BACKUP interface etch0 # 容器内部的网卡名称 virtual_router_id 33 priority 100 # 优先级 advert_int 1 autheentication { auth_type PASS auth_pass letmein } virtual_ipaddress { 172.20.128.50 # 虚拟路径 } track_script { chk_nginx } } haproxy.cfg global log 127.0.0.1 local0 maxconn 4096 daemon nbproc 4 defaults log 127.0.0.1 local3 mode http option dontlognull option redispatch retries 2 maxconn 2000 balance roundrobin timeout connect 5000ms timeout client 5000ms timeout server 5000ms frontend main bind *:6301 default_backend webserver backend webserveer server nginx_master 127.20.127.50:80 check inter 2000 rise 2 fall 5 ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:6:2","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":"七、内置变量 $args #请求中的参数值 $query_string #同 $args $arg_NAME #GET请求中NAME的值 $is_args #如果请求中有参数，值为\"?\"，否则为空字符串 $uri #请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如\"/foo/bar.html\"。 $document_uri #同 $uri $document_root #当前请求的文档根目录或别名 $host #优先级：HTTP请求行的主机名\u003e\"HOST\"请求头字段\u003e符合请求的服务器名.请求中的主机头字段，如果请求中的主机头不可用，则为服务器处理请求的服务器名称 $hostname #主机名 $https #如果开启了SSL安全模式，值为\"on\"，否则为空字符串。 $binary_remote_addr #客户端地址的二进制形式，固定长度为4个字节 $body_bytes_sent #传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的\"%B\"参数保持兼容 $bytes_sent #传输给客户端的字节数 $connection #TCP连接的序列号 $connection_requests #TCP连接当前的请求数量 $content_length #\"Content-Length\" 请求头字段 $content_type #\"Content-Type\" 请求头字段 $cookie_name #cookie名称 $limit_rate #用于设置响应的速度限制 $msec #当前的Unix时间戳 $nginx_version #nginx版本 $pid #工作进程的PID $pipe #如果请求来自管道通信，值为\"p\"，否则为\".\" $proxy_protocol_addr #获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串 $realpath_root #当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径 $remote_addr #客户端地址 $remote_port #客户端端口 $remote_user #用于HTTP基础认证服务的用户名 $request #代表客户端的请求地址 $request_body #客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器 $request_body_file #将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传 递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off，uwsgi_pass_request_body off，or scgi_pass_request_body off $request_completion #如果请求成功，值为\"OK\"，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空 $request_filename #当前连接请求的文件路径，由root或alias指令与URI请求生成 $request_length #请求的长度 (包括请求的地址，http请求头和请求主体) $request_method #HTTP请求方法，通常为\"GET\"或\"POST\" $request_time #处理客户端请求使用的时间,单位为秒，精度毫秒； 从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止。 $request_uri #这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：\"/cnphp/test.php?arg=freemouse\" $scheme #请求使用的Web协议，\"http\" 或 \"https\" $server_addr #服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中 $server_name #服务器名 $server_port #服务器端口 $server_protocol #服务器的HTTP版本，通常为 \"HTTP/1.0\" 或 \"HTTP/1.1\" $status #HTTP响应代码 $time_iso8601 #服务器时间的ISO 8610格式 $time_local #服务器时间（LOG Format 格式） $cookie_NAME #客户端请求Header头中的cookie变量，前缀\"$cookie_\"加上cookie名称的变量，该变量的值即为cookie名称的值 $http_NAME #匹配任意请求头字段；变量名中的后半部分NAME可以替换成任意请求头字段，如在配置文件中需要获取http请求头：\"Accept-Language\"，$http_accept_language即可 $http_cookie $http_host #请求地址，即浏览器中你输入的地址（IP或域名） $http_referer #url跳转来源,用来记录从那个页面链接访问过来的 $http_user_agent #用户终端浏览器等信息 $http_x_forwarded_for $sent_http_NAME #可以设置任意http响应头字段；变量名中的后半部分NAME可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可 $sent_http_cache_control $sent_http_connection $sent_http_content_type $sent_http_keep_alive $sent_http_last_modified $sent_http_location $sent_http_transfer_encoding ","date":"2022-07-01","objectID":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/:7:0","tags":["Nginx"],"title":"Nginx详细教程","uri":"/2022/07/nginx%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"},{"categories":["教程"],"content":" 本文转自：https://blog.csdn.net/bird_tp/article/details/105587582 看本博客有不清晰的地方，可以查看mybatis plus的官方文档：https://baomidou.com/ ","date":"2022-06-01","objectID":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/:0:0","tags":["MybatisPlus"],"title":"MybatisPlus条件构造器","uri":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/"},{"categories":["教程"],"content":"一、queryWrapper是什么 queryWrapper是mybatis plus中实现查询的对象封装操作类，他的层级关系如下 在上面的图片中 Wrapper ：条件构造抽象类，最顶端父类，抽象类中提供4个方法西面贴源码展示 AbstractWrapper ： 用于查询条件封装，生成sql的where条件 AbstractLambdaWrapper ： Lambda语法使用Wrapper统一处理解析lambda获取 column。 LambdaQueryWrapper ：看名称也能明白就是用于Lambda语法使用的查询Wrapper LambdaUpdateWrapper ：Lambda更新封装Wrapper QueryWrapper ：Entity对象封装操作类，不是用Lambda语法 UpdateWrapper ：Update条件封装，用于Entity对象更新操作 ","date":"2022-06-01","objectID":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/:1:0","tags":["MybatisPlus"],"title":"MybatisPlus条件构造器","uri":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/"},{"categories":["教程"],"content":"二、使用demo QueryWrapper\u003cPbListBlack\u003e sectionQueryWrapper = new QueryWrapper\u003c\u003e(); sectionQueryWrapper.eq(\"OPTYPE\", 1); sectionQueryWrapper.eq(\"BLTYPE\", 1); List\u003cPbListBlack\u003e pbListBlacks = iPbListBlackMapper.selectList(sectionQueryWrapper); 上面这段代码的意思就是，首先新建一个QueryWrapper对象，类型为PbListBlack对象，也就是你需要查询的实体数据 sectionQueryWrapper.eq(\"OPTYPE\", 1); sectionQueryWrapper.eq(\"BLTYPE\", 1); 这两句的意思是PbListBlack对象对应的数据库表中的OPTYPE，BLTYPE字段值要为1，然后调用iPbListBlackMapper.selectList方法，入参就为前面新建好的查询对象封装类 下面贴上查询实体的代码 @Data @EqualsAndHashCode(callSuper = false) @Accessors(chain = true) @TableName(\"PB_LIST_BLACK\") @ApiModel(value = \"PB_LIST_BLACK对象\", description = \"\") public class PbListBlack extends Model\u003cPbListBlack\u003e { @TableField(\"ID\") private Long id; @TableField(\"USERID\") private String userId; @TableField(\"SPGATE\") private String spgate; @TableField(\"SPNUMBER\") private String spnumber; @TableField(\"PHONE\") private Long phone; @TableField(\"OPTYPE\") private Integer optype; @TableField(\"OPTTIME\") private Timestamp optTime; @TableField(\"CORPCODE\") private String corpCode; @TableField(\"SVRTYPE\") private String svrType; @TableField(\"MSG\") private String msg = \" \"; @ApiModelProperty(value = \"黑名单类型。1：短信；2：彩信\") @TableField(\"BLTYPE\") private Integer blType; } 下面是iPbListBlackMapper的代码 @Repository public interface IPbListBlackMapper extends BaseMapper\u003cPbListBlack\u003e { } 仅仅只需要基层BaseMapper接口即可，这样mybatis plus底层封装的方法即可实现帮你查询你设置查询条件查询到的数据 当你的Mapper继承BaseMapper接口后，无需编写mapper.xml文件，即可获得CRUD功能 ","date":"2022-06-01","objectID":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/:2:0","tags":["MybatisPlus"],"title":"MybatisPlus条件构造器","uri":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/"},{"categories":["教程"],"content":"三、QueryWrapper的方法 ","date":"2022-06-01","objectID":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/:3:0","tags":["MybatisPlus"],"title":"MybatisPlus条件构造器","uri":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/"},{"categories":["教程"],"content":"四、总结 上面的博客内容虽然简单，也只展示了一个查询的功能。在你实际使用的时候，可以按照 条件构造器上面包含的的方法，设置你查询数据的条件，调用BaseMapper里相应的方法即可 ","date":"2022-06-01","objectID":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/:4:0","tags":["MybatisPlus"],"title":"MybatisPlus条件构造器","uri":"/2022/06/mybatisplus%E6%9D%A1%E4%BB%B6%E6%9E%84%E9%80%A0%E5%99%A8/"},{"categories":["教程"],"content":" 整理一些常用的Docker命令 本文转自：https://zhuanlan.zhihu.com/p/54946336 ","date":"2022-05-01","objectID":"/2022/05/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/:0:0","tags":["Docker"],"title":"Docker常用命令整理","uri":"/2022/05/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"},{"categories":["教程"],"content":"一、常用命令 docker pull ${CONTAINER NAME} #拉取镜像 docker images #查看本地所有镜像 docker ps #查看所有正在运行的容器，加-q返回id docker ps -a #查看所有容器，加-q返回id docker rmi ${IMAGE NAME/ID} #删除镜像 docker rm ${CONTAINER NAME/ID} #删除容器 docker save ${IMAGE NAME} \u003e ${FILE NAME}.tar #将镜像保存成文件 docker load \u003c ${FILE NAME}.tar #从文件加载镜像 docker start ${CONTAINER NAME/ID} #运行一个以前运行过的容器 docker stop ${CONTAINER NAME/ID} #停止一个正在运行的容器 docker logs ${CONTAINER NAME/ID} #显示运行容器的日志 docker run... #运行一个容器 --name ${container name} #设置容器名称 -p ${host port}:${container port} #映射主机和容器内的端口 -e ${env name}=${env value} #添加环境变量 -d #后台运行 -v ${host folder path}:${container folder path} #将主机目录挂在到容器内 ","date":"2022-05-01","objectID":"/2022/05/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/:1:0","tags":["Docker"],"title":"Docker常用命令整理","uri":"/2022/05/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"},{"categories":["教程"],"content":"二、高级命令 # Advance use docker ps -f \"status=exited\" #显示所有退出的容器 docker ps -a -q #显示所有容器id docker ps -f \"status=exited\" -q #显示所有退出容器的id docker restart $(docker ps -q) #重启所有正在运行的容器 docker stop $(docker ps -a -q) #停止所有容器 docker rm $(docker ps -a -q) #删除所有容器 docker rm $(docker ps -f \"status=exited\" -q) #删除所有退出的容器 docker rm $(docker stop $(docker ps -a -q)) #停止并删除所有容器 docker start $(docker ps -a -q) #启动所有容器 docker rmi $(docker images -a -q) #删除所有镜像 docker exec -it ${CONTAINER NAME/ID} /bin/bash #进入容器内 docker exec -it ${CONTAINER NAME/ID} ping ${CONTAINER NAME/ID} #一个容器ping另外一个容器 docker top ${CONTAINER NAME/ID} #显示一个容器的top信息 docker stats #显示容器统计信息(正在运行) docker stats -a #显示所有容器的统计信息(包括没有运行的) docker stats -a --no-stream #显示所有容器的统计信息(包括没有运行的) ，只显示一次 docker stats --no-stream | sort -k8 -h #统计容器信息并以使用流量作为倒序 docker system docker system df #显示硬盘占用 docker system events #显示容器的实时事件 docker system info #显示系统信息 docker system prune #清理文件 ","date":"2022-05-01","objectID":"/2022/05/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/:2:0","tags":["Docker"],"title":"Docker常用命令整理","uri":"/2022/05/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"},{"categories":["教程"],"content":"一、标题 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:1:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"二级标题 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:2:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"三级标题 四级标题 五级标题 六级标题 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:2:1","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"二、字体 *斜体文本* _斜体文本_ **粗体文本** __粗体文本__ ***粗斜体文本*** ___粗斜体文本___ 斜体文本 斜体文本 粗体文本 粗体文本 粗斜体文本 粗斜体文本 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:3:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"三、分割线 *** * * * ***** - - - ---------- ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:4:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"四、删除线 ~~BAIDU.COM~~ BAIDU.COM ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:5:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"五、脚注 创建脚注格式类似这样 [^RUNOOB]。 [^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！ 创建脚注格式类似这样 1。 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:6:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"六、列表 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:7:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"1.无序列表 * 第一项 * 第二项 + 第一项 + 第二项 - 第一项 - 第二项 第一项 第二项 第一项 第二项 第一项 第二项 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:7:1","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"2.有序列表 1. 第一项 2. 第二项 第一项 第二项 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:7:2","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"3.列表嵌套 1. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素 2. 第二项： - 第二项嵌套的第一个元素 - 第二项嵌套的第二个元素 第一项： 第一项嵌套的第一个元素 第一项嵌套的第二个元素 第二项： 第二项嵌套的第一个元素 第二项嵌套的第二个元素 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:7:3","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"七、区块 \u003e 最外层 \u003e \u003e 第一层嵌套 \u003e \u003e \u003e 第二层嵌套 最外层 第一层嵌套 第二层嵌套 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:8:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"1.区块中使用列表 \u003e 区块中使用列表 \u003e 1. 第一项 \u003e 2. 第二项 \u003e + 第一项 \u003e + 第二项 \u003e + 第三项 区块中使用列表 第一项 第二项 第一项 第二项 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:8:1","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"2.列表中使用区块 * 第一项 \u003e 菜鸟教程 \u003e 学的不仅是技术更是梦想 * 第二项 第一项 菜鸟教程 学的不仅是技术更是梦想 第二项 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:8:2","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"八、代码块 `printf()` 函数 printf() 函数 ```javascript $(document).ready(function () { alert('RUNOOB'); }); ``` $(document).ready(function () { alert('RUNOOB'); }); ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:9:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"九、链接 这是一个链接 [菜鸟教程](https://www.runoob.com) 这是一个链接 菜鸟教程 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:10:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"1.高级链接 这个链接用 1 作为网址变量 [Google][1] 这个链接用 runoob 作为网址变量 [Runoob][runoob] [1]: http://www.google.com/ [runoob]: http://www.runoob.com/ 这个链接用 1 作为网址变量 Google 这个链接用 runoob 作为网址变量 Runoob ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:10:1","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"十、图片 ![alt 属性文本](图片地址) ![alt 属性文本](图片地址 \"可选标题\") ![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png) ![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png \"RUNOOB\") RUNOOB 这个链接用 1 作为网址变量 [RUNOOB][1]. 然后在文档的结尾为变量赋值（网址） [1]: http://static.runoob.com/images/runoob-logo.png 这个链接用 1 作为网址变量 RUNOOB. 然后在文档的结尾为变量赋值（网址） \u003cimg src=\"http://static.runoob.com/images/runoob-logo.png\" width=\"50%\"\u003e ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:11:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"十一、表格 | 表头 | 表头 | | ---- | ---- | | 单元格 | 单元格 | | 单元格 | 单元格 | 表头 表头 单元格 单元格 单元格 单元格 | 左对齐 | 右对齐 | 居中对齐 | | :-----| ----: | :----: | | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 | 左对齐列 右对齐列 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:12:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"十二、高级技巧 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:13:0","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"1.支持的 HTML 元素 使用 \u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eAlt\u003c/kbd\u003e+\u003ckbd\u003eDel\u003c/kbd\u003e 重启电脑 使用 Ctrl+Alt+Del 重启电脑 ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:13:1","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["教程"],"content":"2.转义 **文本加粗** \\*\\*正常显示星号\\*\\* 文本加粗 **正常显示星号** 菜鸟教程 – 学的不仅是技术，更是梦想！！！ ↩︎ ","date":"2022-03-01","objectID":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:13:2","tags":["MarkDown"],"title":"MarkDown学习笔记","uri":"/2022/03/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}]